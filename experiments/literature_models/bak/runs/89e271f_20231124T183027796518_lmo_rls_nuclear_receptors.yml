active: true
cv:
  call: bipartite_learn.model_selection.multipartite_cross_validate
  params:
    cv: 4
    diagonal: false
    n_jobs: 16
    pairwise: true
    random_state: 0
    return_estimator: false
    return_train_score: false
    scoring:
    - roc_auc
    - average_precision
    shuffle: true
    verbose: 10
dataset:
  X:
  - force_download: false
    path: datasets/nuclear_receptors/X1.txt
    read:
      call: numpy.loadtxt
      params: {}
    url: https://people.montefiore.uliege.be/schrynemackers/dpix/dpin_X1.txt
  - force_download: false
    path: datasets/nuclear_receptors/X2.txt
    read:
      call: numpy.loadtxt
      params: {}
    url: https://people.montefiore.uliege.be/schrynemackers/dpix/dpin_X2.txt
  name: nuclear_receptors
  pairwise: true
  y:
    force_download: false
    path: datasets/nuclear_receptors/Y.txt
    read:
      call: numpy.loadtxt
      params: {}
    url: https://people.montefiore.uliege.be/schrynemackers/dpix/dpin_Y.txt
directory: literature_models/runs
end: 2023-11-24 18:30:29.119785
estimator:
  call: literature_models.estimators.lmo_rls
  final_params:
    cv:
      call: bipartite_learn.model_selection._split.MultipartiteCrossValidator
      params: {}
    diagonal: false
    error_score: .nan
    estimator:
      call: imblearn.pipeline.Pipeline
      params:
        memory: null
        steps:
        - - targetkernellinearcombiner
          - call: bipartite_learn.wrappers.MultipartiteSamplerWrapper
            params:
              ndim: 2
              samplers:
                call: bipartite_learn.preprocessing.monopartite.TargetKernelLinearCombiner
                params:
                  alpha: 0.5
                  filter_params: false
                  gamma: 1.0
                  gamma_scale: squares
                  metric: rbf
                  n_jobs: null
        - - localmultioutputwrapper
          - call: bipartite_learn.wrappers.LocalMultiOutputWrapper
            params:
              combine_func_kwargs: null
              combine_predictions_func:
                load: numpy.mean
              independent_labels: false
              primary_cols_estimator:
                call: sklearn.kernel_ridge.KernelRidge
                params:
                  alpha: 1
                  coef0: 1
                  degree: 3
                  gamma: null
                  kernel: precomputed
                  kernel_params: null
              primary_rows_estimator:
                call: sklearn.kernel_ridge.KernelRidge
                params:
                  alpha: 1
                  coef0: 1
                  degree: 3
                  gamma: null
                  kernel: precomputed
                  kernel_params: null
              secondary_cols_estimator:
                call: sklearn.kernel_ridge.KernelRidge
                params:
                  alpha: 1
                  coef0: 1
                  degree: 3
                  gamma: null
                  kernel: precomputed
                  kernel_params: null
              secondary_rows_estimator:
                call: sklearn.kernel_ridge.KernelRidge
                params:
                  alpha: 1
                  coef0: 1
                  degree: 3
                  gamma: null
                  kernel: precomputed
                  kernel_params: null
        verbose: false
    n_jobs: 3
    pairwise: true
    param_grid:
      targetkernellinearcombiner__samplers__alpha:
      - 0.0
      - 0.1
      - 0.25
      - 0.5
      - 0.75
      - 0.9
      - 1.0
    pre_dispatch: 2*n_jobs
    refit: true
    return_train_score: false
    scoring: neg_mean_squared_error
    train_test_combinations: null
    verbose: 0
  name: lmo_rls
  params: {}
hash: 89e271f290f4b7cc7a6561338fa1d20bc42d1f68e7bd1862d99d46dc5c4e0798
path: "/home/pedro/mestrado/disserta\xE7\xE3o/experiments/literature_models/runs/89e271f_20231124T183027796518_lmo_rls_nuclear_receptors.yml"
results:
  LL_average_precision:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  LL_roc_auc:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  LT_average_precision:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  LT_roc_auc:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  TL_average_precision:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  TL_roc_auc:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  TT_average_precision:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  TT_roc_auc:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  fit_time:
  - 1.2248563766479492
  - 1.2124347686767578
  - 1.2433357238769531
  - 1.225203514099121
  - 1.2214515209197998
  - 1.1720046997070312
  - 1.1889088153839111
  - 1.1781740188598633
  - 1.1769535541534424
  - 1.2179298400878906
  - 1.241286277770996
  - 1.1442580223083496
  - 1.2387220859527588
  - 1.202077865600586
  - 1.264158010482788
  - 1.2468793392181396
  score_time:
  - 0.007730960845947266
  - 0.004674434661865234
  - 0.007443904876708984
  - 0.0052716732025146484
  - 0.007398843765258789
  - 0.0066187381744384766
  - 0.006300449371337891
  - 0.005286455154418945
  - 0.006682872772216797
  - 0.006251335144042969
  - 0.006762981414794922
  - 0.007771730422973633
  - 0.007686614990234375
  - 0.007380008697509766
  - 0.007292747497558594
  - 0.007704973220825195
start: 2023-11-24 18:30:27.796518
wrapper: null
